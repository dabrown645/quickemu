#!/usr/bin/bash
#   This template identifies the functions required to supported by each OS

#function create_vm() {
#    #    This function can be used to over rid the standard function in quickget
#     #    if you distribution requires something special. Windows and Mac are examples
#    #    that will need to provide this function
#}

function get_distro_info() {
    #   This function returns an associative array with keys "url", "iso", and "hash"
    #   You WILL HAVE to change this functiion for your distro
    declare -A distro_info
    distro_info['url']="https://ant.seedhost.eu/arcolinux/iso"
    distro_info['iso']="${RELEASE}/arcolinuxd-${RELEASE}-x86_64.iso"
    distro_info['hash']="$(curl -s "${distro_info['url']}/${distro_info['iso']}.sha256" | cut -d' ' -f1)"
    
    for parameter in "${!distro_info[@]}"; do
        echo "${parameter} ${distro_info[$parameter]}"
    done
}

#function get_file() {
#    #    This function can be used to over rid the standard function in quickget
#    #    if you distribution requires something special. Windows and Mac are examples
#    #    that will need to provide this function
#}

function releases() {
    #   This funciton returns supported OS releases for the OS
    #   You WILL HAVE to change this functiion for your distro
    echo v22.01.10 v22.03.07 v22.04.02 v22.05.02 v22.06.07 v22.07.03 v22.09.04 v22.10.02 v22.11.02 v22.12.02 v23.01.03 v23.02.02 v23.03.01 v23.04.03 v23.05.04 v23.06.02 v23.07.01 v23.09.03 v23.10.01 v23.11.03 v23.12.03 v24.01.04 v24.02.01
}

function editions() {
    #   This frunctions returns sn associative array with releases as the key
    #   and a "!" seperated string of valid editions for the specific release.
    #   While quite often editions are the same for all releases it is not always
    #   the case.
    #   Editions have different meanings for different OS's
    #   You WILL HAVE to change this functiion for your distro
    declare -A editions

    # Because of timing issues with getting the information directly from the website
    # like I didn for releases I have to hard code these or things time out and get messed up

    editions['v22.01.10']=""
    editions['v22.03.07']=""
    editions['v22.04.02']=""
    editions['v22.05.02']=""
    editions['v22.06.07']=""
    editions['v22.07.03']=""
    editions['v22.09.04']=""
    editions['v22.10.02']=""
    editions['v22.11.02']=""
    editions['v22.12.02']=""
    editions['v23.01.03']=""
    editions['v23.02.02']=""
    editions['v23.03.01']=""
    editions['v23.04.03']=""
    editions['v23.05.04']=""
    editions['v23.06.02']=""
    editions['v23.07.01']=""
    editions['v23.09.03']=""
    editions['v23.10.01']=""
    editions['v23.11.03']=""
    editions['v23.12.03']=""
    editions['v24.01.04']=""
    editions['v24.02.01']=""

    for edition in "${!editions[@]}"; do
        echo "${edition} ${editions[$edition]}"
    done
}

function editions_required() {
    #   You WILL HAVE to change this functiion for your distro
    return 1        # Returning 0 means editions requuuuuire and 1 is not required
}

function pretty_name() {
    #   This funcction returns an expanded OS name for pretty printing
    #   You WILL HAVE to change this functiion for your distro
    echo "Arco LinuxD"
}

function homepage() {
    #   This function returns the OS's home page URL
    #   You WILL HAVE to change this functiion for your distro
    echo "https://arcolinux.com/"
}

function make_vm_config() {
    #   This function creates the vm_config file and can be used to
    #   replace the default one in the quickget
    #   You MIGHT HAVE to change this functiion for your distro
    default_vm_config

    # Override any default settings
    # i.e sed -i 's/^disk_size=.*/disk_size=\"80G\"/'

    # Add any additional lines
    # {
    #     printf "fixed_iso=\"%s\"\n"   ${fixed_iso}
    #
    # } >> "${VM_PATH}.conf"
}
