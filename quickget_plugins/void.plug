#!/usr/bin/bash
#
#   This template identifies the functions required to supported by each OS

#function create_vm() {
#    #    This function can be used to over rid the standard function in quickget
#    #    if you distribution requires something special. Windows and Mac are examples
#    #    that will need to provide this function
#}

function get_distro_info() {
    #   This function returns an associative array with keys "url", "iso", and "hash"
    #   You WILL HAVE to change this functiion for your distro
    declare -A distro_info
    distro_info['url']="https://repo-default.voidlinux.org/live/current"
    distro_info['date']=$(wget -q -O- "${distro_info['url']}/sha256sum.txt" | head -n1 | cut -d'.' -f1 | cut -d'-' -f4)
    case ${EDITION} in
        glibc)      distro_info['iso']="void-live-x86_64-${distro_info['date']}-base.iso";;
        musl)       distro_info['iso']="void-live-x86_64-musl-${distro_info['date']}-base.iso";;
        xfce-glibc) distro_info['iso']="void-live-x86_64-${distro_info['date']}-xfce.iso";;
        xfce-musl)  distro_info['iso']="void-live-x86_64-musl-${distro_info['date']}-xfce.iso";;
    esac

    distro_info['hash']=$(wget -q -O- "${distro_info['url']}/sha256sum.txt" | grep "${distro_info['iso']}" | cut -d' ' -f4)
    echo "${distro_info[@]@k}"
}

#    HASH="$(wget -q -O- "${URL}/sha256sum.txt" | grep "${ISO}" | cut -d' ' -f4)"
#    echo "${URL}/${ISO} ${HASH}"
#https://repo-default.voidlinux.org/live/current/void-live-x86_64-musl-20230628-base.iso

#function get_file() {
#    #    This function can be used to over rid the standard function in quickget
#    #    if you distribution requires something special. Windows and Mac are examples
#    #    that will need to provide this function
#}

function releases() {
    #   This funciton returns supported OS releases for the OS
    #   You WILL HAVE to change this functiion for your distro
    echo current
}

function editions() {
    #   This frunctions returns sn associative array with releases as the key
    #   and a "!" seperated string of valid editions for the specific release.
    #   While quite often editions are the same for all releases it is not always
    #   the case.
    #   Editions have different meanings for different OS's
    #   You WILL HAVE to change this functiion for your distro
    declare -A editions
    local release

    for release in $(releases); do
        editions[${release}]="glibc!musl!xfce-glibc!xfce-musl"
    done

    echo "${editions[@]@k}"
}

function editions_required() {
    #   You WILL HAVE to change this functiion for your distro
    return 0        # Returning 0 means editions are required and 1 not required
}

function pretty_name() {
    #   This funcction returns an expanded OS name for pretty printing
    #   You WILL HAVE to change this functiion for your distro
    echo "Void Linux"
}

function homepage() {
    #   This function returns the OS's home page URL
    #   You WILL HAVE to change this functiion for your distro
    echo "https://voidlinux.org/"
}

function make_vm_config() {
    #   This function creates the vm_config file and can be used to
    #   replace the default one in the quickget
    #   You MIGHT HAVE to change this functiion for your distro
    default_vm_config

    # Override any default settings
    # i.e sed -i 's/^disk_size=.*/disk_size=\"80G\"/'

    # Add any additional lines
    # {
    #     printf "fixed_iso=\"%s\"\n"   ${fixed_iso}
    #
    # } >> "${VM_PATH}.conf"
}
