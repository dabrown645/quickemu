#!/usr/bin/bash

export LC_ALL="C"

function main() {
    trap cleanup EXIT

    if ((BASH_VERSINFO[0] < 4)); then
        echo "Sorry, you need bash 4.0 or newer to run this script"
        exit 1
    fi

    PARAMS=""
    BASE_DIR="${BASH_SOURCE[0]%%/*}"
    PLUGINS="${BASE_DIR}/quickemu_plugins"

    # Set defaults for arguments
    test_iso_url=false
    show_iso_url=false
    open_distro_homepage=false
    testing=false
    use_color=auto
    colors_set=false

    while (( "${#}" )); do
        case "${1}" in
            list|list_csv)
                list_csv
                exit 0
                ;;
            list_json)
                list_json
                exit 0
                ;;
            --version|-version)
                "${BASE_DIR}"/quickemu ---version
                exit 0
                ;;
            --test-iso-url|-t)
                test_iso_url=true
                shift
                ;;
            --show-iso-url|-s)
                show_iso_url=true
                shift
                ;;
            --open-distro-homepage|-o)
                open_distro_homepage=true
                shift
                ;;
            --color)
                use_color="${2}"
                shift 2
                case "${use_color}" in
                    on|off|auto) : ;;
                    *)
                        error "valid values are [on|off|auto]"
                        ;;
                esac
                ;;
            --test)
                testing=true
                shift
                ;;
            --*|-*) # unsupported flags
                error "Unsuppotred flag ${1}" 
                shift
                usage
                ;;
            *) # Preserve positional arguments
                PARAMS="${PARAMS} ${1}"
                shift
                ;;
        esac
    done

    # set positional arguments in their proper place
    eval set -- "${PARAMS}"

    [ -z "${1}" ] && OS="" || OS="${1,,}"   
    [ -z "${2}" ] && RELEASE="" || RELEASE="${2,,}" 
    [ -z "${3}" ] && EDITIONS="" || EDITIONS="${3,,}"

    [[ ${testing} == true ]] && testing

    if [ -z "${OS}" ]; then
        error "You must supply a distribution and release at a minimum"
        exit 1
    elif ! valid_os "${OS}"; then
        error "${OS} is not a valid os please resubmit with valid os"
        printf "Valid OS's:\n"
        supported_oses
        printf "\n"
        usage
    else            # shellcheck disable=SC1090
        source "${PLUGINS}/${OS}".plug
    fi
    
}

#
# Functions used by main
#

function cleanup() {
    if [ -n "$(jobs -p)" ]; then
        kill "$(jobs -p)"
    fi
}

function error() {
    if ! ${colors_set}; then
        set_colors
    fi

    printf "%sERROR: %s%s\n" "${fred}" "${reset}" "${*}"
}

function list_csv() {
    # TODO
    echo list_csv
}

function list_json {
    # TODO
    list_csv
    echo list_json
}

function set_colors() {
    if [[ $(tput colors) -ge 8 ]]; then
#    if tput setaf 1 &> /dev/null; then      # Are colors supported
        tput sgr0
        if [[ "${use_color}" == "auto" ]]; then
            if [[ -t 1 ]] && [[ -t 2 ]]; then
                use_color="on"
            else
                use_color="off"
            fi
        fi
    else
        use_color="off"                     # color not supported
    fi

    # shellcheck disable=SC2034
    if [[ "${use_color}" == "on" ]]; then
        bold=$(tput bold)       ; dim=$(tput dim)
        smul=$(tput smul)       ; rmul=$(tput rmul)
        smso=$(tput smso)       ; rmso=$(tput rmso)
        rev=$(tput rev)         ; blink=$(tput blink)
        invis=$(tput invis)     ; reset=$(tput sgr0)

        fblack=$(tput setaf 0)  ; bblack=$(tput setab 0)
        fred=$(tput setaf 1)    ; bred=$(tput setab 1)
        fgreen=$(tput setaf 2)  ; bgreen=$(tput setab 2)
        fyellow=$(tput setaf 3) ; byellow=$(tput setab 3)
        fblue=$(tput setaf 4)   ; bblue=$(tput setab 4)
        fpurple=$(tput setaf 5) ; bpurple=$(tput setab 5)
        fcyan=$(tput setaf 6)   ; bcyan=$(tput setab 6)
        fwhite=$(tput setaf 7)  ; bwhite=$(tput setab 7)
    else
        bold=                   ; dim=
        smul=""                 ; rmul=""
        smso=""                 ; rmso=""
        rev=""                  ; blink=""
        invis=""                ; reset=""

        fblack=""               ; bblack=""
        fred=""                 ; bred=""
        fgreen=""               ; bgreen=""
        fyellow=""              ; byellow=""
        fblue=""                ; bblue=""
        fpurple=""              ; bpurple=""
        fcyan=""                ; bcyan=""
        fwhite=""               ; bwhite=""
    fi
}

function supported_oses() {
    (
        cd "${PLUGINS}" || ( echo "${PLUGINS} not found"; exit )
        command ls ./*.plug* \
            | sed -e 's/*\///' -e 's/\.plug//' \
                -e 's/\.\///' \
            |   column -x
    )
    return 0
}

function usage() {
    printf "USAGE:\n"
    exit 1
}

function valid_os() {
    local OS=${1}
    # shellcheck disable=SC1090
    if [ -e "${BASE_DIR}/quickemu_plugins/${OS}.plug" ]; then
        source  "${PLUGINS}/${OS}.plug"
        return 0
    else
        return 1
    fi
}

function testing() {
    printf "================================\n"
    printf "test_iso_url         : %s\n" "${test_iso_url}"
    printf "show_iso_url         : %s\n" "${show_iso_url}"
    printf "open_distro_homepage : %s\n" "${open_distro_homepage}"
    printf "testing              : %s\n" "${testing}"
    printf "OS                   : %s\n" "${OS}"
    printf "RELEASE              : %s\n" "${RELEASE}"
    printf "EDITIONS             : %s\n" "${EDITIONS}"
    printf "================================\n"
}

main "${@}"
